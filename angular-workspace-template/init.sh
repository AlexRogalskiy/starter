# create workspace
ng new --create-application=false WORKSPACE_NAME
cd WORKSPACE_NAME

# Add an Angular application to Angular workspace
ng g application --inline-style --inline-template --routing --style=scss APP_NAME

# Make it an Ionic-Angular app
npm i -D @ionic/angular-toolkit
cd projects/APP_NAME/
npm init
npm i @capacitor/core @capacitor/app @capacitor/haptics @capacitor/keyboard @capacitor/status-bar @ionic/angular ionicons
npm i -D @capacitor/cli
sed -i 's/"projects\/APP_NAME\/src\/assets"/"projects\/APP_NAME\/src\/assets",\
              { "glob": "**\/*.svg", "input": "projects\/APP_NAME\/node_modules\/ionicons\/dist\/ionicons\/svg", "output": ".\/svg" }/' ../../angular.json
sed -i 's/"@schematics\/angular:component": {/"@ionic\/angular-toolkit:page": {\
          "style": "scss"\
        },\
        "@ionic\/angular-toolkit:component": {/' ../../angular.json
sed -i 's/"projectType": "application"/"projectType": "application",\
      "cli": {\
        "analytics": false,\
        "defaultCollection": "@ionic\/angular-toolkit"\
      }/' ../../angular.json
cp ../../../angular-workspace-templates/styles.scss src/styles.scss
cp ../../../angular-workspace-templates/index.html src/index.html
echo -e "import { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { RouteReuseStrategy } from '@angular/router';\n$(cat src/app/app.module.ts)" > src/app/app.module.ts
sed -i 's/BrowserModule,/BrowserModule, IonicModule.forRoot(),/' src/app/app.module.ts
sed -i 's/providers: \[\]/providers: \[{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\]/' src/app/app.module.ts
ng build
ionic init --multi-app # y y
ionic init APP_NAME --type=angular
ionic cap add android
sed -i 's/io.ionic.starter/CAPACITOR_ID/' capacitor.config.ts
sed -i 's/www/..\/..\/dist\/APP_NAME/' capacitor.config.ts
ionic cap sync
sed -i 's/"test": "echo \\"Error: no test specified\\" \&\& exit 1"/"test": "ionic test",\
    "build": "ionic build",\
    "serve": "ionic serve",\
    "android": "ionic capacitor run android -l"/' package.json
cd ../..
sed -i 's/"start": "ng serve"/"APP_NAME:serve": "cd projects\/APP_NAME \&\& npm run serve",\
    "API_LIB_NAME:android": "cd projects\/APP_NAME \&\& npm run android"/' package.json
sed -i 's/"build": "ng build"/"API_LIB_NAME:build": "cd projects\/APP_NAME \&\& npm run build"/' package.json
sed -i 's/"test": "ng test"/"API_LIB_NAME:test": "cd projects\/APP_NAME \&\& npm run test"/' package.json
sed -i '/"watch":/d' package.json

# Replace Angular minimal app with an Ionic app composed of a menu in a split-pane and two pages
cd projects/APP_NAME/src/app

ionic g page Settings
cp ../../../../../angular-workspace-templates/settings.page.ts settings/settings.page.ts
rm -f settings/settings.page.css settings/settings.page.html

ionic g page UserAccount
cp ../../../../../angular-workspace-templates/user-account.page.ts user-account/user-account.page.ts
rm -f user-account/user-account.page.css user-account/user-account.page.html

cp ../../../../../angular-workspace-templates/app-routing.module.ts app-routing.module.ts
cp ../../../../../angular-workspace-templates/app.component.ts app.component.ts
cd ../../../..

# Add an Angular lib to Angular workspace
# This lib is generated by `openapitools` from the OpenAPI spec file produced by Bao-Loc REST API (with `mvn clean verify -Popenapi`)
ng g library @c4-soft/API_LIB_NAME
npm i -D @openapitools/openapi-generator-cli
sed -i 's/"APP_NAME:serve": "cd projects\/APP_NAME \&\& npm run serve"/"postinstall": "npm run API_LIB_NAME:install",\
    "API_LIB_NAME:generate": "npx openapi-generator-cli generate -i ..\/API_SPEC_FILE -g typescript-angular --type-mappings AnyType=any --additional-properties=serviceSuffix=RestClient,npmName=@c4-soft\/API_LIB_NAME-client,npmVersion=0.0.1,stringEnums=true,enumPropertyNaming=camelCase,supportsES6=true,withInterfaces=true --remove-operation-id-prefix -o projects\/c4-soft\/API_LIB_NAME",\
    "API_LIB_NAME:build": "npm run API_LIB_NAME:generate \&\& npm run ng -- build @c4-soft\/API_LIB_NAME --configuration production",\
    "API_LIB_NAME:install": "cd projects\/c4-soft\/API_LIB_NAME \&\& npm i \&\& cd ..\/..\/.. \&\& npm run API_LIB_NAME:build",\
    "APP_NAME:serve": "cd projects\/APP_NAME \&\& npm run serve"/' package.json
rm -R projects/c4-soft/API_LIB_NAME
npm run API_LIB_NAME:generate
sed -i 's/"version": "5.4.0"/"version": "5.1.0"/' openapitools.json # Because of a regression (http client "delete" args)
cp ../angular-workspace-templates/.openapi-generator-ignore projects/c4-soft/API_LIB_NAME/.openapi-generator-ignore
cp ../angular-workspace-templates/.gitignore projects/c4-soft/API_LIB_NAME/.gitignore
sed -i 's/"$schema": ".\/node_modules\/ng-packagr\/ng-package.schema.json"/"$schema": ".\/node_modules\/ng-packagr\/ng-package.schema.json",\
  "dest": "..\/..\/..\/dist\/c4-soft\/API_LIB_NAME"/' projects/c4-soft/API_LIB_NAME/ng-package.json
cp ../angular-workspace-templates/tsconfig.lib.json projects/c4-soft/API_LIB_NAME/tsconfig.lib.json
cp ../angular-workspace-templates/tsconfig.lib.prod.json projects/c4-soft/API_LIB_NAME/tsconfig.lib.prod.json
npm i